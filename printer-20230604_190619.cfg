# TO DO:
# 1.- Implement KAMP for Adaptive Meshing and Purging Via
#     https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
# 2.- Finish setting up filament load/unload macros and runout settings
# 3.- add 2 more LED strips that are just white light A.K.A Daylight on a stick
# 4.- Look through LCD Display_menu.cfg for implementation into printer setup
# 5.- look through fan.cfg for implementation
# 6.- look at implementing heater_verify.cfg
# 7.- Verify Schedule_layer and implementation



#####################################
# Include
#####################################
#No Capitals is still testing
[include mainsail.cfg]
[include KAMP.cfg]
[include homing.cfg] 
[include maintenance_macro.cfg]
[include Safety_Checks.cfg] 
[include LEDs.cfg] 
[include print_start.cfg]
[include print_variables.cfg]
[include beep.cfg]
[include filament.cfg]
#[include menu.cfg]
[include basic_macro.cfg]
[include .shell_commands.cfg] #all shell commands
#[include schedule_layer.cfg] Verify
[include Z_cal_test.cfg]
######################################
# User Additions
######################################

[force_move]
enable_force_move: True

[static_digital_output disable_max31865]
pins: PF8

[pause_resume]
recover_velocity: 100

# Support ArcWelder
[gcode_arcs]
resolution: 0.10

[firmware_retraction]
retract_length: 0.36
retract_speed: 60
unretract_speed: 60

########################################
# Mainsail
########################################

[virtual_sdcard]
path: ~/printer_data/gcodes
# /home/pi/printer_data/gcodes
on_error_gcode:
    CANCEL_PRINT  

[display_status]

[pause_resume]

[exclude_object]

[sdcard_loop]

#[skew_correction] 
#SET_SKEW can be used to configure skew correction for the XY plane.
#Follow instructions at https://www.klipper3d.org/Skew_Correction.html?h=skew+corre

#[endstop_phase] 
#Use for physical endstop switches. Use G28 followed by ENDSTOP_PHASE_CALIBRATE

[save_variables]
filename: /home/pi/printer_data/config/.variables.stb

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

########################################
# MCU's
########################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2F0034001750344D30353320-if00
# CAN bus is also available on this board

[mcu sb2240]
canbus_uuid: 7ade32f5d37f
#642c5b1be6c4 - Broken SB2240

[mcu rpi]
serial: /tmp/klipper_host_mcu

########################################
# Temperature
########################################

[temperature_sensor SB2240]
sensor_type: temperature_mcu
sensor_mcu: sb2240
min_temp: 0
max_temp: 90

[temperature_sensor Chamber]
sensor_type: Generic 3950
sensor_pin: sb2240: PA3
min_temp: 0
max_temp:100
gcode_id: C

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 60

[temperature_sensor PI4]
sensor_type: temperature_host

########################################
# Prihnter Type
########################################

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4500
max_z_velocity: 30
max_z_accel: 150

# See docs/Config_Reference.md for a description of parameters.

########################################
# Input Shaper
########################################

[input_shaper]
# X axis
shaper_freq_x: 63.4
shaper_type_x: 2hump_ei

# Y axis
shaper_freq_y: 38.4
shaper_type_y: zv

#input shaper types: zv, mzv, ei, 2hump_ei, 3hump_ei
########################################
# Filament Sensors and Future ERCF
########################################

#[filament_switch_sensor my_sensor] is located in filament.cfg
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
#   The pin on which the switch is connected. This parameter must be
#   provided.





########################################
# X and Y Steppers
########################################

# Driver0 Stepper B
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
# â€¦
endstop_pin: tmc5160_stepper_x:virtual_endstop
#endstop_pin: ^PG6
position_endstop: 365
position_min: 0
position_max: 365
homing_speed: 40
homing_retract_dist: 0
homing_positive_dir: True

# Driver1 Stepper A
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
# _
endstop_pin: tmc5160_stepper_y:virtual_endstop
#endstop_pin: ^PG9
position_endstop: 370
position_min: 0
position_max: 370
homing_speed: 40
homing_retract_dist: 0
homing_positive_dir: True

#########################################
# TMC5160
#########################################

# Driver0 Stepper B
[tmc5160 stepper_x]
cs_pin: PC4
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: True
diag1_pin: ^!PG6
driver_SGT: -0
run_current: 0.750
#hold_current: 0.2
sense_resistor: 0.075
stealthchop_threshold: 0

# Driver1 Stepper A
[tmc5160 stepper_y]
cs_pin: PD11
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: True
diag1_pin: ^!PG9
driver_SGT: -0 # -64 is most sensitive value, 63 is least sensitive
run_current: 0.750
#hold_current: 0.2
sense_resistor: 0.075
stealthchop_threshold: 0

########################################
#   Z Stepper Settings
########################################

## Z Stepper - Left Z Motor
## Z Stepper Driver 2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8            
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
# endstop_pin: PA0
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.2
position_max: 400
position_min: -5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3.0
homing_retract_dist: 0

##  Z1 Stepper - Right Z Motor
##  Z1 Stepper Driver 3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
## Remember to mirror these changes in stepper_z! (there are two motors)
rotation_distance: 8            
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree

## Z2 Stepper - Rear Z Motor
## Z2 Stepper Driver 4
#[stepper_z2]
# step_pin: PF9
#dir_pin: PF10
#enable_pin: PG2
#rotation_distance: 8
#microsteps: 16
#full_steps_per_rotation: 200

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_z]
uart_pin: PC6
##diag_pin: PG10
run_current: 0.750
#stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PC7
##diag_pin: PG11
run_current: 0.750
#stealthchop_threshold: 999999

#[tmc2209 stepper_z2]
#uart_pin: PF2
##diag_pin: PG12
#run_current: 0.750
#stealthchop_threshold: 999999

########################################
# Toolhead SB2240
########################################

# SB2240 PCB Toolhead
[extruder]
step_pin: sb2240: PD0
dir_pin: !sb2240: PD1
enable_pin: !sb2240: PD2
microsteps: 16
rotation_distance: 22.9823104
nozzle_diameter: 0.600
filament_diameter: 1.750
#stealthchop_threshold: 0
#driver_tpfd: 0
gear_ratio: 50:10
heater_pin:sb2240: PB13
sensor_type: MAX31865
sensor_pin:  sb2240: PA4
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
spi_bus: spi1
min_extrude_temp: 180
min_temp: 10
max_temp: 350
max_extrude_only_distance: 100
max_extrude_cross_section: 5 ; calculated by below numbers it should be 1.44 KAMP requires this to be set at 5
#   Maximum area (in mm^2) of an extrusion cross section (eg,
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2
control: pid
pid_kp: 29.248
pid_ki: 1.283
pid_kd: 166.718
## Try to keep pressure_advance below 1.0
pressure_advance: 0.028

################################
######### PID_EXTRUDER #########
################################

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  STATUS_BUSY
  {% set e = printer.toolhead.extruder %}
  {% set T = params.TEMPERATURE|default(210)|float %}
  {% set S = params.FAN_IN_PERCENT|default(0)|float *2.55 %}
  {% set P = printer.configfile.config[e].pid_kp|float %}
  {% set I = printer.configfile.config[e].pid_ki|float %}
  {% set D = printer.configfile.config[e].pid_kd|float %}
  M106 S{S}
  PID_CALIBRATE HEATER={e} TARGET={T}
  TURN_OFF_HEATERS
  M109 R50
  SAVE_CONFIG


#########################################
# TMC2240 configuration
#########################################

[tmc2240 extruder]
cs_pin: sb2240: PA15
spi_software_sclk_pin: sb2240: PB10
spi_software_mosi_pin: sb2240: PB11
spi_software_miso_pin: sb2240: PB2
#driver_TPFD: 0
run_current: 0.650
#stealthchop_threshold: 999999

#########################################
# SB2240 Onboard ADXL
#########################################

#onboard ADXL on SB2240
[adxl345]
cs_pin: sb2240: PB12
spi_software_sclk_pin: sb2240: PB10
spi_software_mosi_pin: sb2240: PB11
spi_software_miso_pin: sb2240: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 180, 180, 20
accel_chip: adxl345

########################################
# Toolhead ADXL
########################################

########################################
# ADXL on Hot End
########################################

#external ADXL plugged directly into RPI
#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#probe_points: 180, 180, 20
#accel_chip: adxl345


########################################
# Probe
########################################

#[include voron_tap.cfg]

[include bltouch.cfg]



#########################################
# Bed Heater
#########################################

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
max_power:0.6
min_temp: 0
max_temp: 130
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769
pwm_cycle_time: 0.01666



############ PID_BED ###########
################################

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  STATUS_BUSY
  {% set T = params.TEMPERATURE|default(60)|float %}
  {% set P = printer.configfile.config['heater_bed'].pid_kp|float %}
  {% set I = printer.configfile.config['heater_bed'].pid_ki|float %}
  {% set D = printer.configfile.config['heater_bed'].pid_kd|float %}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER=heater_bed TARGET={T}
  TURN_OFF_HEATERS
  STATUS_READY


########################################
# Bed Heater Chamber Fans
########################################

#[heater_generic chamber_heater]
#gcode_id: Chamber_Heater
#heater_pin: PA3
#sensor_type: Generic 3950
#sensor_pin: PF4
#control: watermark
#max_power: .5
#min_temp: 0
#max_temp: 110

#[heater_fan chamber_heater_fan]
#pin: PD13
#max_power: 1.0
#heater: chamber_heater
#heater_temp: 40.0 # fan will turn off below this level

########################################
# Bed Mesh
########################################

[bed_mesh]
speed: 200
horizontal_move_z: 15
mesh_min: 50, 50
mesh_max: 310,310
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0  

# SEE KAMP.cfg
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BASE_BED_MESH_CALIBRATE
#gcode:
    #before the original gcode
#    BED_MESH_CLEAR
#    _Z_TILT_MAYBE
#    G1 X175 Y175 Z5 F6000
    #the original gcode
#    BASE_BED_MESH_CALIBRATE
    #after the original gcode


########################################
# Bed Leveling Routine
########################################
[idle_timeout]
timeout: 1800

#[safe_z_home]
## XY Location of the Z Endstop Switch
#home_xy_position: 185, 185
#speed: 100
#z_hop: 10

[bed_screws]
screw1: 27,304
screw1_name: rear_left_screw
screw2: 327,304
screw2_name: rear_right_screw
screw3: 327,45
screw3_name: front_right_screw
screw4: 27, 45
screw4_name: front_left_screw
horizontal_move_z: 5
speed: 200

# Z_TILT : See Either BLTOUCH.cfg or Voron_Tap.cfg to configure.


########################################
# MCU Fans
########################################

#Case Fan Operates 3 Fans
[multi_pin case_fans]
pins: PA8,PE5,PD12
#   A comma separated list of pins associated with this alias. This
#   parameter must be provided.
#Fans only run while steppers are active.

[controller_fan MCU_Cooling]
pin: multi_pin:case_fans
max_power: 0.90
off_below: 0.10
kick_start_time: 0.5
stepper: stepper_x, stepper_y


########################################
# Toolhead Fans
########################################

#Runs when hot end turns on
[heater_fan hotend_fan]
pin: sb2240: PB14
heater: extruder
tachometer_pin: ^sb2240: PB15
max_power: 1.0
heater_temp: 50.0
tachometer_ppr: 2
tachometer_poll_interval: 0.0015

#Part cooling fan
[fan]
pin: sb2240: PA0
#max power: 1.0
kick_start_time: 0.5
off_below: 0.10

#Runs when hot end turns on
[heater_fan SB2240_fan]
pin: sb2240: PA1
heater_temp: 50
max_power: 1.0

########################################
# EXP 1 / EXP 2 (display) pins
########################################

#[#board_pins display_pins]
#aliases:
 



########################################
#   Displays
########################################

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: PE9
a0_pin: PE10
rst_pin: PE12
encoder_pins: ^PB1, ^PB2
click_pin: ^!PE7
contrast: 63
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5

menu_timeout:
#   Timeout for menu. Being inactive this amount of seconds will
#   trigger menu exit or return to root menu when having autorun
#   enabled. The default is 0 seconds (disabled)
menu_timeout: 90

[output_pin _beeper_pin]
pin: EXP1_1
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)


########################################
# Macros
########################################
# The following status macros are available (these go inside of your macros):
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#    STATUS_COOLING
#    STATUS_PRINTING
#    STATUS_PART_READY
#    STATUS_COOLING

# With additional macros for basic control:
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

[gcode_macro NOTIFY]
gcode:
    {% if 'MSG' in params %}
        RESPOND TYPE=command MSG="action:notification {params.MSG}"
    {% endif %}






#####################################################################
#   BTT Octopus Pin Aliases
#####################################################################

[board_pins]
aliases:
    # Stepper drivers
    MOT0_EN=PF14, MOT0_STEP=PF13, MOT0_DIR=PF12, MOT0_CS=PC4,   # MOTOR0
    MOT1_EN=PF15, MOT1_STEP=PG0,  MOT1_DIR=PG1,  MOT1_CS=PD11,  # MOTOR1
    MOT2_EN=PG5,  MOT2_STEP=PF11, MOT2_DIR=PG3,  MOT2_CS=PC6,   # MOTOR2
    MOT3_EN=PA0,  MOT3_STEP=PG4,  MOT3_DIR=PC1,  MOT3_CS=PC7,   # MOTOR3
    MOT4_EN=PG2,  MOT4_STEP=PF9,  MOT4_DIR=PF10, MOT4_CS=PF2,   # MOTOR4
    MOT5_EN=PF1,  MOT5_STEP=PC13, MOT5_DIR=PF0,  MOT5_CS=PE4,   # MOTOR5
    MOT6_EN=PD4,  MOT6_STEP=PE2,  MOT6_DIR=PE3,  MOT6_CS=PE1,   # MOTOR6
    MOT7_EN=PE0,  MOT7_STEP=PE6,  MOT7_DIR=PA14, MOT7_CS=PD3,   # MOTOR7

    # Heaters
    BED_OUT=PA1,
    HE0=PA2, HE1=PA3, HE2=PB10, HE3=PB11,

    # Thermisors
    TB=PF3, T0=PF4, T1=PF5, T2=PF6, T3=PF7,
    PT100=PF8,

    # Fans
    FAN0=PA8, FAN1=PE5, FAN2=PD12, FAN3=PD13, FAN4=PD14, FAN5=PD15,

    # End stops
    # X= ESTOP0=PG6 Y=ESTOP1=PG9 Voron Tap=PG15 HOT END FAN TACH=PG14
    ESTOP0=PG6,  ESTOP1=PG9,  ESTOP2=PG10, ESTOP3=PG11,
    ESTOP4=PG12, ESTOP5=PG13, ESTOP6=PG14, ESTOP7=PG15,
    
    # EXP 1 / EXP 2 (display) pins
      # EXP1 header
    EXP1_1=PE8,   EXP1_2=PE7,
    EXP1_3=PE9,   EXP1_4=PE10,
    EXP1_5=PE12,  EXP1_6=PE13,   
    EXP1_7=PE14,  EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2
    EXP2_1=PA6,   EXP2_2=PA5,
    EXP2_3=PB1,   EXP2_4=PA4,
    EXP2_5=PB2,   EXP2_6=PA7,    
    EXP2_7=PC15,  EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>,

    # TFT
    TFT_5=<RST>,
    TFT_4=PA10,
    TFT_3=PA9,
    TFT_2=<GND>,
    TFT_1=<5V>,

    # Inductive Probe
    PRB_1=<DCV>, PRB_2=<GND>, PRB_3=PB7,

    # BL Touch
    BLT_5=<GND>,
    BLT_4=<5V>,
    BLT_CTL=PB6,   # BL Touch servo pin
    BLT_2=<GND>,
    BLT_SNSR=PB7,  # BL Touch end stop pin

    # LED Control
    NEOPXL_3=<GND>, NEOPXL_2=PB0, NEOPXL_1=<5V>,

    # Raspberry Pi
    RPI_1=<5V>,  RPI_2=<5V>,
    RPI_3=<GND>, RPI_4=<GND>,
    RPI_5=<GND>, RPI_6=<GND>,
    RPI_7=<GND>, RPI_8=<GND>,
    RPI_RX=PD6,  RPI_TX=PD5,

    # SPI3
    SPI3_2=<3V3>, SPI3_MOSI=PB5, SPI3_CS=PA15, SPI3_8=<GND>, SPI3_10=<5V>,
    SPI3_1=<GND>, SPI3_MISO=PB4, SPI3_SCK=PB3, SPI3_7=<GND>, SPI3_9=<5V>,

    # Other headers
    POWER_DET=PC0,
    PS_ON=PE11

############################################
# User Variables
############################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -2.800
#*#
#*# [extruder]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.120000, -0.235000, -0.295000, -0.052500, 0.282500
#*# 	0.107500, -0.055000, -0.120000, 0.057500, 0.322500
#*# 	0.170000, 0.077500, -0.007500, 0.035000, 0.190000
#*# 	0.145000, 0.037500, -0.030000, 0.087500, 0.187500
#*# 	0.085000, 0.065000, 0.032500, 0.085000, 0.290000
#*# 	-0.130000, -0.105000, 0.050000, 0.197500, 0.305000
#*# x_count = 5
#*# y_count = 6
#*# mesh_x_pps = 3
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 50.0
#*# max_x = 310.0
#*# min_y = 50.0
#*# max_y = 310.0
#*#
#*# [bltouch]
#*# z_offset = 1.199
